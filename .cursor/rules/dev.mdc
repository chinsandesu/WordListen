---
description: 
globs: 
alwaysApply: true
---
“随身听背单词”应用开发手册与配置清单 (v5.1)

1. 项目概述

“随身听背单词”是一款移动应用，旨在通过个性化词库管理、文本转语音（TTS）播放和交互式复习模式，帮助用户高效学习英语和日语词汇。应用遵循 Material Design 3 (M3) 规范，支持 CSV、TXT 和 Excel 文件导入，适配手机和平板设备，提供简洁、直观的体验。本手册包含单词特征的正则表达式，便于开发解析和处理逻辑。

2. 核心功能

2.1 单词数据管理





用户自定义词库导入（CSV、TXT 和 Excel）：





用户通过“词库管理”界面导入本地 CSV、TXT 或 Excel（.xls/.xlsx）格式的单词文件。



智能解析： 自动识别日语、英语和中文列，支持用户选择分隔符（CSV/TXT：逗号、制表符等；Excel：基于列）。



去重处理： 导入时跳过与现有词库完全重复的条目。



每个词库作为独立的“词典”或“书本”添加到书架，拥有唯一名称。



Excel 导入： 支持解析 .xls 和 .xlsx 文件，提取单词、假名、中文意思等字段。



书架功能：





管理多个词库，支持选择当前学习词库和删除词库。



自动分组：





按每 50 个词一组划分，组信息与词库绑定。



单词处理逻辑：





日语发音： 若单词同时包含假名和汉字（如“あいさつ 挨拶”），仅朗读第一个形式（假名“あいさつ”）。



意思缩减： 若中文意思超过三个（以“；”或“，”分隔），保留前三个。

2.2 单词特征与正则表达式

为便于开发解析单词数据，定义以下特征和正则表达式：





日语单词：





特征： 包含假名（平假名/片假名）或汉字，可能以空格分隔（如“あいさつ 挨拶”）。



正则表达式：





检测纯假名：^[ぁ-ゖァ-ヶー]+$



检测汉字：^[\u4E00-\u9FFF]+$



提取第一个形式（假名优先）：^([ぁ-ゖァ-ヶー]+)(?:\s+[\u4E00-\u9FFF]+)?





示例：输入“あいさつ 挨拶”，匹配组 1 返回“あいさつ”。



处理逻辑： 仅使用第一个匹配的假名形式进行 TTS 朗读。



英语单词：





特征： 由拉丁字母、连字符或空格组成（如“abundance”，“well-known”）。



正则表达式： ^[a-zA-Z]+(?:[- ][a-zA-Z]+)*$



处理逻辑： 直接用于 TTS 朗读。



中文意思：





特征： 多个意思以“；”或“，”分隔（如“充裕，丰富”或“滥用；虐待；辱骂”）。



正则表达式： ([^；,]+)(?:[；,]\s*([^；,]+))?(?:[；,]\s*([^；,]+))?





匹配最多三个意思，忽略后续内容。



示例：输入“滥用；虐待；辱骂；弊端；恶习”，匹配组 1-3 返回“滥用”“虐待”“辱骂”。



处理逻辑： 保留前三个意思，拼接为 TTS 朗读内容。



词性标记：





特征： 词性标注（如“n.”，“vt.”，“adj.”）通常位于单词或意思之前/之后。



正则表达式： ^(n\.|v\.|vt\.|vi\.|adj\.|adv\.|prep\.|conj\.|pron\.|num\.|art\.|int\.)(?:\s+)?





示例：输入“n. 充裕，丰富”，匹配组 1 返回“n.”。



处理逻辑： 解析词性但不用于 TTS，仅存储供显示。



日语词性（如“自五”“名”“他サ”）：





特征： 括号中标注，如“（自五）”“（名）”。



正则表达式： ^\((自五|他五|名|形动|他サ)\)\s*





示例：输入“（自五） 靠近，迫近”，匹配组 1 返回“自五”。



处理逻辑： 存储词性，排除在 TTS 朗读中。

2.3 单词朗读播放（“随身听”模式）





朗读模式：





隐藏单词和意思： 卡片不显示单词或意思，仅朗读（根据模式）。



只读中文（CN ONLY）： 朗读中文意思（最多三条）。



只读单词（JP/EN ONLY）： 朗读日语（假名形式）或英语。



单词->中文（JP -> CN / EN -> CN）： 先朗读单词（日语假名/英语），间隔后朗读中文。



自定义设置：





播放间隔： 0.5 秒至 5 秒（滑动条或输入框）。



TTS 语速： 0.5x 至 2.0x（滑动条或输入框）。



播放控制：





播放/暂停、上一词、下一词。



随机播放： 可开启/关闭随机顺序。



循环播放： 自动循环选定组。



组播放标记： 完成一轮后标记为“当日已听过”。

2.4 刷词模式（复习模式）





组选择： 选择一个或多个组，仅显示选中组单词。



卡片瀑布流： 垂直滚动列表（LazyColumn）。



卡片内容切换：





隐藏单词： 仅显示中文意思（最多三条）。



隐藏中文： 仅显示单词（日语假名/英语）。



单词中文都展示： 显示单词和中文意思。



即点即读： 卡片右侧小喇叭图标朗读单词（日语仅读假名）。



组刷词标记： 浏览完选中组后（滚动到底部）标记为“当日已刷过”。

2.5 组选择与管理





组列表： 显示组号、单词数量、复选框、播放次数及当日活动标记。



多组选择： 支持勾选多个组。



当日标记： 使用小圆点或颜色（如浅绿色）表示已听过/刷过。

2.6 UI/UX 优化





设备适配： 手机强制竖屏，平板强制横屏。



进度保存： 保存播放索引、选中组、词库 ID、播放次数和当日标记。



TTS 错误处理： 缺失语言包时，显示友好提示并提供跳转至系统 TTS 设置的选项。



默认图标： 使用 Material Design 默认图标（如喇叭图标）。

3. 界面样式设计

3.1 设计原则





风格： Material Design 3，简洁、现代、扁平化。



配色：





背景：米黄色 (#F5F5DC)。



文字：深灰色或黑色，确保高对比度。



字体： 无衬线字体，支持日语、英语、中文清晰显示。

3.2 主播放界面（“随身听”模式）





卡片布局：





上方：单词（日语假名/英语，可隐藏），居中。



下方：中文意思（最多三条，可隐藏），居中，间隔 16-24dp。



控制按钮： 播放/暂停、上一词、下一词，位于卡片下方。



设置区域： 模式、间隔、随机、语速设置位于底部或侧边。

3.3 刷词界面





瀑布流： LazyColumn 实现垂直滚动。



卡片布局：





单词（可隐藏，显示日语假名/英语），左对齐。



小喇叭图标（右侧，默认 Material Design 图标）。



中文意思（可隐藏，最多三条），左对齐。



内容切换： 顶部/底部按钮或下拉菜单切换显示内容（隐藏单词、隐藏中文、都展示）。

3.4 组选择与词库管理





组选择： 显示组号、单词数、复选框、播放次数及当日标记（浅绿色小圆点）。



词库管理： 列表显示词库名称、单词数量，包含“激活”和“删除”按钮。

4. 交互效果

4.1 卡片交互（“随身听”模式）





默认显示： 根据模式隐藏单词和/或中文（例如“隐藏单词和意思”模式下卡片空白）。



点击切换： 点击卡片显示/隐藏单词或中文。



自动切换： “单词->中文”模式下，朗读完单词后自动显示并朗读中文。

4.2 播放控制





播放/暂停： 图标切换（播放↔暂停）。



上一词/下一词： 立即切换并朗读（日语仅读假名）。



设置反馈： 滑动条实时显示秒数/倍速。

4.3 刷词模式





滚动浏览： 自由滚动卡片。



即点即读： 点击喇叭图标朗读单词（日语仅读假名）。



内容切换： 点击切换按钮更新卡片显示（隐藏单词、隐藏中文、都展示）。



刷词标记： 滚动到底部后标记“当日已刷过”。

4.4 词库导入





文件选择： 弹出系统文件选择器，支持 CSV、TXT、Excel。



成功提示： “导入成功，共xxx个单词，去重yyy个”。



失败提示： “文件格式错误，请检查文件或分隔符”。

5. 技术要求与配置清单

5.1 技术栈





前端框架： Jetpack Compose（Android），支持 Material Design 3。



后端存储： Room 数据库，存储词库、组信息、用户进度。



TTS 引擎： Android TTS，支持日语、英语、中文语音包。



文件解析：





CSV/TXT：使用 OpenCSV 解析。



Excel：使用 Apache POI 解析 .xls 和 .xlsx 文件。



平台支持： Android（最低 API 21，Android 5.0）。

5.2 Gradle 依赖项（基于 Gradle 8.14.3 和 JDK 24）

为确保稳定性，选择稍旧但经过广泛验证的依赖版本，兼容 Gradle 8.14.3 和 JDK 24：

plugins {
    id("com.android.application") version "8.14.3" apply false
    id("org.jetbrains.kotlin.android") version "2.0.0" apply false
}

android {
    compileSdk = 34
    defaultConfig {
        minSdk = 21
        targetSdk = 34
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_24
        targetCompatibility = JavaVersion.VERSION_24
    }
    kotlinOptions {
        jvmTarget = "24"
    }
}

dependencies {
    // Jetpack Compose（稳定版本）
    implementation("androidx.activity:activity-compose:1.8.0")
    implementation("androidx.compose.material3:material3:1.2.0")
    implementation("androidx.compose.ui:ui:1.5.0")
    implementation("androidx.compose.runtime:runtime:1.5.0")

    // Room 数据库（稳定版本）
    implementation("androidx.room:room-runtime:2.5.2")
    ksp("androidx.room:room-compiler:2.5.2")
    implementation("androidx.room:room-ktx:2.5.2")

    // OpenCSV（CSV 文件解析，稳定版本）
    implementation("com.opencsv:opencsv:5.7.1")

    // Apache POI（Excel 文件解析，稳定版本）
    implementation("org.apache.poi:poi:5.2.3")
    implementation("org.apache.poi:poi-ooxml:5.2.3")
    implementation("org.apache.xmlbeans:xmlbeans:5.1.1")
    implementation("org.apache.commons:commons-compress:1.22")

    // Android TTS（文本转语音）
    implementation("androidx.core:core:1.10.0")
}





说明：





Gradle 8.14.3 完全支持 JDK 24。



Jetpack Compose: 1.5.0（UI）和 1.2.0（Material3），2023 年中期稳定版本，广泛验证。



Room: 2.5.2，2023 年成熟版本，性能可靠。



OpenCSV: 5.7.1，稳定支持 CSV 解析。



Apache POI: 5.2.3，搭配 xmlbeans 5.1.1 和 commons-compress 1.22，支持 Excel 解析，兼容 JDK 24。



Core: 1.10.0，提供 Android 核心功能支持。



所有依赖版本为 2025 年 7 月仍广泛使用的稳定版本。

5.3 配置清单





屏幕方向：





手机：强制竖屏。



平板：强制横屏。



TTS 设置： 支持日语、英语、中文语音包，测试 Google TTS 兼容性。



文件格式： 支持 CSV、TXT（UTF-8 编码）、Excel（.xls/.xlsx）。



存储需求： 每 1000 词约 1MB，支持大词库（>10,000 词）。



性能优化： 使用 LazyColumn 优化长列表渲染。



错误处理： 提供导入失败、TTS 缺失等友好提示。

5.4 特殊逻辑实现





日语发音：





使用正则表达式 ^([ぁ-ゖァ-ヶー]+)(?:\s+[\u4E00-\u9FFF]+)? 提取第一个假名形式（如“あいさつ”）。



示例：输入“あいさつ 挨拶”，仅朗读“あいさつ”。



意思缩减：





使用正则表达式 ([^；,]+)(?:[；,]\s*([^；,]+))?(?:[；,]\s*([^；,]+))? 提取前三个意思。



示例：输入“滥用；虐待；辱骂；弊端；恶习”，输出“滥用；虐待；辱骂”。



默认图标：





使用 androidx.compose.material.icons.Icons.Default.VolumeUp 作为喇叭图标。


6. 测试与验证